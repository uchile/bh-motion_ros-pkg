/** This option lets the robot stand up when it has fallen down. */
option stand_up
{  
  initial state lying_down
  {
    decision
    { 
      if (fall_down_state == fall_down_state.on_ground && fall_down_direction == fall_down_direction.back)
        goto lyingOnBack;
      else if (fall_down_state == fall_down_state.on_ground && fall_down_direction == fall_down_direction.front)
        goto lyingOnFront;
      else if (fall_down_state == fall_down_state.on_ground && (fall_down_direction == fall_down_direction.left || fall_down_direction == fall_down_direction.right))
        goto lyingOnSide;
      else
        stay;
    }
    action
    {
      sound = none;
    }
  }

  state lyingOnBack
  {
    decision
    {
      if (state_time > 8500)
      {
        goto standing;
      }
      else
      {
        stay;
      }
    }
    action
    {
      head.control_mode = look_up;
      sound = mario_injury;
      special_action(id = stand_up_back_nao);
    }
  }

  state lyingOnBackMirror
  {
    decision
    {
      if (state_time > 10000)
      {
        goto standing;
      }
      else
      {
        stay;
      }
    }
    action
    {
      head.control_mode = look_up;
      sound = mario_injury;
      special_action(id = stand_up_back_nao, mirror = true);
    }
  }

  state lyingOnFront
  {
    decision
    {
      if (state_time > 2000)
      {
        goto standing;
      }
      else
      {
        stay;
      }
    }
    action
    {
      head.control_mode = look_up;
      sound = mario_injury;
      special_action(id = stand_up_front_nao);
    }
  }


  state lyingOnSide
  {
    decision
    {
      if (state_time > 2000)
      {
        goto standing;
      }
      else
      {
        stay;
      }
    }
    action
    {
      head.control_mode = look_up;
      sound = mario_injury;
    }
  }

  target state standing
  {
    decision
    { 
      if (fall_down_state == fall_down_state.on_ground && fall_down_direction == fall_down_direction.back)
        goto lyingOnBackMirror;
      else if (fall_down_state == fall_down_state.on_ground && fall_down_direction == fall_down_direction.front)
        goto lyingOnFront;
      else if (fall_down_state == fall_down_state.on_ground && (fall_down_direction == fall_down_direction.left || fall_down_direction == fall_down_direction.right))
        goto lyingOnSide;
      else
        stay;
    }
    action
    {
    }
  }
}
