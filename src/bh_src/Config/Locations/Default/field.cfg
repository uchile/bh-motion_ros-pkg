// This is the field configuration for the
// SPL field 2010

dimensions = [
  {id = xPosOpponentFieldBorder;      value = 3700;},
  {id = xPosOpponentGoal;             value = 3500;},
  {id = xPosOpponentGoalpost;         value = 3000;},
  {id = xPosOpponentGroundline;       value = 3000;},
  {id = xPosOpponentSideCorner;       value = 3000;},
  {id = xPosOpponentPenaltyArea;      value = 2400;},
  {id = xPosOpponentPenaltyMark;      value = 1200;},
  {id = xPosHalfWayLine;              value =    0;},
  {id = xPosOwnPenaltyArea;           value = -xPosOpponentPenaltyArea;},
  {id = xPosOwnPenaltyMark;           value = -xPosOpponentPenaltyMark;},
  {id = xPosOwnSideCorner;            value = -xPosOpponentSideCorner;},
  {id = xPosOwnGroundline;            value = -xPosOpponentGroundline;},
  {id = xPosOwnGoalpost;              value = -xPosOpponentGoalpost;},
  {id = xPosOwnGoal;                  value = -xPosOpponentGoal;},
  {id = xPosOwnFieldBorder;           value = -xPosOpponentFieldBorder;},


  {id = yPosLeftFieldBorder;          value = 2700;},
  {id = yPosLeftSideline;             value = 2000;},
  {id = yPosLeftGroundline;           value = 2000;},
  {id = yPosLeftPenaltyArea;          value = 1100;},
  {id = yPosLeftGoal;                 value =  700;},
  {id = yPosCenterGoal;               value =    0;},
  {id = yPosRightGoal;                value = -yPosLeftGoal;},
  {id = yPosRightPenaltyArea;         value = -yPosLeftPenaltyArea;},
  {id = yPosRightGroundline;          value = -yPosLeftGroundline;},
  {id = yPosRightSideline;            value = -yPosLeftSideline;},
  {id = yPosRightFieldBorder;         value = -yPosLeftFieldBorder;},

  //throw-in points
  {id = xPosThrowInPointOpponentHalf; value = 1200;},
  {id = xPosThrowInPointCenter;       value =    0;},
  {id = xPosThrowInPointOwnHalf;      value = -xPosThrowInPointOpponentHalf;},

  //other dimensions
  {id = fieldLinesWidth;              value =   50;},
  {id = goalPostRadius;               value =   48;}, // 47.5 would be correct for our goals. Should be 50 according to rules.
  {id = centerCircleRadius;           value =  600;},
  {id = goalHeight;                   value =  800;},
  {id = ballRadius;                   value =   33;}, // should be 32.5
  {id = ballFriction;                 value =  150;}
];
carpetBorder = [
  {
    type = line;
    from = {x = xPosOpponentFieldBorder; y = yPosRightFieldBorder;};
    to   = {x = xPosOpponentFieldBorder; y = yPosLeftFieldBorder;};
  },{
    type = line;
    from = {x = xPosOpponentFieldBorder; y = yPosLeftFieldBorder;};
    to   = {x = xPosOwnFieldBorder;      y = yPosLeftFieldBorder;};
  },{
    type = line;
    from = {x = xPosOwnFieldBorder;      y = yPosLeftFieldBorder;};
    to   = {x = xPosOwnFieldBorder;      y = yPosRightFieldBorder;};
  },{
    type = line;
    from = {x = xPosOwnFieldBorder;      y = yPosRightFieldBorder;};
    to   = {x = xPosOpponentFieldBorder; y = yPosRightFieldBorder;};
  }
];
fieldBorder = [
  {
    type = line;
    from = {x = xPosOpponentGroundline; y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
  },{
    type = line;
    from = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
  },{
    type = line;
    from = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosRightSideline;};
  },{
    type = line;
    from = {x = xPosOwnGroundline;      y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosRightSideline;};
  }
];
fieldLines = [
  // field border lines
  {
    type = line;
    from = {x = xPosOpponentGroundline; y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
  },{
    type = line;
    from = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
  },{
    type = line;
    from = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosRightSideline;};
  },{
    type = line;
    from = {x = xPosOwnGroundline;      y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosRightSideline;};
  },

// center line
  {
    type = line;
    from = {x = xPosHalfWayLine; y = yPosLeftSideline;};
    to   = {x = xPosHalfWayLine; y = yPosRightSideline;};
  },

// penalty areas
  {
    type = line;
    from = {x = xPosOwnGroundline;  y = yPosLeftPenaltyArea;};
    to   = {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;};
  },{
    type = line;
    from = {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;};
    to   = {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;};
  },{
    type = line;
    from = {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;};
    to   = {x = xPosOwnGroundline;  y = yPosRightPenaltyArea;};
  },

  {
    type = line;
    from = {x = xPosOpponentGroundline;  y = yPosLeftPenaltyArea;};
    to   = {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;};
  },{
    type = line;
    from = {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;};
    to   = {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;};
  },{
    type = line;
    from = {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;};
    to   = {x = xPosOpponentGroundline;  y = yPosRightPenaltyArea;};
  },

// throw-in lines
  {
    type = line;
    from = {x = 1150; y = 0;};
    to   = {x = 1250; y = 0;};
  },{
    type = line;
    from = {x = xPosThrowInPointOpponentHalf; y = -50;};
    to   = {x = xPosThrowInPointOpponentHalf; y =  50;};
  },

  {
    type = line;
    from = {x = -1150; y = 0;};
    to   = {x = -1250; y = 0;};
  },{
    type = line;
    from = {x = xPosThrowInPointOwnHalf; y = -50;};
    to   = {x = xPosThrowInPointOwnHalf; y =  50;};
  },

  {
    type = line;
    from = {x = -50; y = 0;};
    to   = {x =  50; y = 0;};
  },

// center circle
  {
    type = circle;
    center = {x = 0; y = 0;};
    radius = centerCircleRadius;
    numOfSegments = 16;
  }
];

xCorner = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;}
];

tCorner0 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOwnGroundline; y = yPosRightPenaltyArea;}
];

tCorner90 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosHalfWayLine; y = yPosRightSideline;}
];

tCorner180 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;}
];

tCorner270 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosHalfWayLine; y = yPosLeftSideline;}
];

lCorner0 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOwnGroundline; y = yPosRightPenaltyArea;},
  {x = xPosHalfWayLine; y = yPosRightSideline;},
  {x = xPosOwnGroundline; y = yPosRightSideline;},
  {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;}
];

lCorner90 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;},
  {x = xPosHalfWayLine; y = yPosRightSideline;},
  {x = xPosOpponentGroundline; y = yPosRightSideline;},
  {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;}
];

lCorner180 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;},
  {x = xPosHalfWayLine; y = yPosLeftSideline;},
  {x = xPosOpponentGroundline; y = yPosLeftSideline;},
  {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;}
];

lCorner270 = [
  {x = xPosHalfWayLine; y = centerCircleRadius;},
  {x = xPosHalfWayLine; y = -centerCircleRadius;},
  {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
  {x = xPosOwnGroundline; y = yPosRightPenaltyArea;},
  {x = xPosHalfWayLine; y = yPosLeftSideline;},
  {x = xPosOwnGroundline; y = yPosLeftSideline;},
  {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;}
];
